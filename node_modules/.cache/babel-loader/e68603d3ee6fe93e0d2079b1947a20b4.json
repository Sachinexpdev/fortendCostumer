{"ast":null,"code":"import Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nexport const Calender = () => {\n  let CurrentDate = new Date();\n  let CurrentMonth = CurrentDate.getMonth();\n  let CurrentYear = CurrentDate.getFullYear();\n  let TotalDays = 31;\n  let CalenderDays = document.querySelectorAll(\".calender-days div\");\n  const CalenderDateTime = document.querySelector(\".Calender-DateTime\");\n  const CalenderDaysWrapper = document.querySelector(\".calender-days\");\n  const CalenderNavigateButtons = {\n    BackIcon: document.querySelector(\"#calender-back-icon-wrapper\"),\n    FrontIcon: document.querySelector(\"#calender-towards-icon-wrapper\")\n  };\n\n  const CovertIntoMonthString = CurrentNumericMonth => {\n    let Months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    return Months[CurrentNumericMonth];\n  };\n\n  const DisplayDate = () => {\n    CalenderDateTime.textContent = `${CovertIntoMonthString(CurrentMonth)} , ${CurrentYear}`;\n  };\n\n  const ActivateThisDay = e => {\n    const Element = document.querySelector(`#${e.target.id}`);\n    Element.classList.toggle(\"active-day\");\n    Element.classList.add(cookies.get('theme'));\n  }; // Helping function to get total daus\n\n\n  const GetTotalDays = Month => {\n    if (Month == 3 || Month == 5 || Month == 8 || Month == 10) {\n      Month = 30;\n    } else if (Month == 1) {\n      Month = 28;\n    } else {\n      Month = 31;\n    }\n\n    return Month;\n  }; // Helping function\n\n\n  const StartDateWithRespectToDay = (year, month) => {\n    let LocalDate = new Date(year, month, 1);\n    let LocalDay = LocalDate.getDay();\n    return LocalDay;\n  }; // Event Function\n\n\n  const NavigateBack = e => {\n    if (CurrentMonth == 0) {\n      CurrentMonth = 11;\n    } else {\n      CurrentMonth--;\n    }\n\n    CalenderDateTime.textContent = `${CovertIntoMonthString(CurrentMonth)} , ${CurrentYear}`;\n    DisplayDays();\n  };\n\n  const NavigateFront = e => {\n    if (CurrentMonth == 11) {\n      CurrentMonth = 0;\n    } else {\n      CurrentMonth++;\n    }\n\n    CalenderDateTime.textContent = `${CovertIntoMonthString(CurrentMonth)} , ${CurrentYear}`;\n    DisplayDays();\n  };\n\n  const DisplayDays = () => {\n    // Remove Event Listeners from Old Divs\n    CalenderDays.forEach(CalenderDay => {\n      CalenderDay.removeEventListener(\"click\", ActivateThisDay);\n    });\n    CalenderDaysWrapper.innerHTML = \"\"; //   Calculate total Days\n\n    TotalDays = GetTotalDays(CurrentMonth); //   frist date Start in which day Monday Tuesday etc\n\n    let FirstElementInCalender = StartDateWithRespectToDay(CurrentYear, CurrentMonth); //   first Loop to add . dots\n\n    for (let CurrentDay = 0; CurrentDay < TotalDays; CurrentDay++) {\n      if (FirstElementInCalender - 1 > CurrentDay) {\n        CalenderDaysWrapper.innerHTML += ` <div>\n                    <span>.</span>\n                  </div>`;\n      }\n    } //   Second loop to display date\n\n\n    for (let CurrentDay = 0; CurrentDay < TotalDays; CurrentDay++) {\n      CalenderDaysWrapper.innerHTML += ` <div id=\"calender-day-${CurrentDay + 1}\">\n                <span>${CurrentDay + 1}</span>\n              </div>`;\n    }\n\n    if (CurrentDate.getMonth() === CurrentMonth) {\n      // let act = +cookies.get(\"theme\")\n      document.querySelector(`#calender-day-${CurrentDate.getDate()}`).classList.add(\"active-day\");\n      document.querySelector(`#calender-day-${CurrentDate.getDate()}`).classList.add(cookies.get('theme'));\n    } //   Add Event Listeners In New Divs\n\n\n    CalenderDays = document.querySelectorAll(\".calender-days div\");\n    CalenderDays.forEach(CalenderDay => {\n      CalenderDay.addEventListener(\"click\", ActivateThisDay);\n    });\n  }; // display date\n\n\n  DisplayDate(); // display days\n\n  DisplayDays(); // add Event Listeners for back and front arrows in calender\n\n  CalenderNavigateButtons.BackIcon.addEventListener(\"click\", NavigateBack);\n  CalenderNavigateButtons.FrontIcon.addEventListener(\"click\", NavigateFront);\n};\n_c = Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["/home/development/floey 1/CustomerPortal/Sept14,2021/floey-customer/src/assets/js/Events/DashboardCalender.js"],"names":["Cookies","cookies","Calender","CurrentDate","Date","CurrentMonth","getMonth","CurrentYear","getFullYear","TotalDays","CalenderDays","document","querySelectorAll","CalenderDateTime","querySelector","CalenderDaysWrapper","CalenderNavigateButtons","BackIcon","FrontIcon","CovertIntoMonthString","CurrentNumericMonth","Months","DisplayDate","textContent","ActivateThisDay","e","Element","target","id","classList","toggle","add","get","GetTotalDays","Month","StartDateWithRespectToDay","year","month","LocalDate","LocalDay","getDay","NavigateBack","DisplayDays","NavigateFront","forEach","CalenderDay","removeEventListener","innerHTML","FirstElementInCalender","CurrentDay","getDate","addEventListener"],"mappings":"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","sourcesContent":["import Cookies from \"universal-cookie\";\nconst cookies = new Cookies\nexport const Calender = () => {\n  let CurrentDate = new Date();\n  let CurrentMonth = CurrentDate.getMonth();\n  let CurrentYear = CurrentDate.getFullYear();\n  let TotalDays = 31;\n\n  let CalenderDays = document.querySelectorAll(\".calender-days div\");\n  const CalenderDateTime = document.querySelector(\".Calender-DateTime\");\n  const CalenderDaysWrapper = document.querySelector(\".calender-days\");\n  const CalenderNavigateButtons = {\n    BackIcon: document.querySelector(\"#calender-back-icon-wrapper\"),\n    FrontIcon: document.querySelector(\"#calender-towards-icon-wrapper\"),\n  };\n\n  const CovertIntoMonthString = (CurrentNumericMonth) => {\n    let Months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    return Months[CurrentNumericMonth];\n  };\n\n  const DisplayDate = () => {\n    CalenderDateTime.textContent = `${CovertIntoMonthString(\n      CurrentMonth\n    )} , ${CurrentYear}`;\n  };\n\n  const ActivateThisDay = (e) => {\n    const Element = document.querySelector(`#${e.target.id}`);\n    Element.classList.toggle(\"active-day\");\n    \n        Element.classList.add(cookies.get('theme'));\n  };\n\n  // Helping function to get total daus\n  const GetTotalDays = (Month) => {\n    if (Month == 3 || Month == 5 || Month == 8 || Month == 10) {\n      Month = 30;\n    } else if (Month == 1) {\n      Month = 28;\n    } else {\n      Month = 31;\n    }\n    return Month;\n  };\n\n  // Helping function\n  const StartDateWithRespectToDay = (year, month) => {\n    let LocalDate = new Date(year, month, 1);\n    let LocalDay = LocalDate.getDay();\n    return LocalDay;\n  };\n\n  // Event Function\n\n  const NavigateBack = (e) => {\n    if (CurrentMonth == 0) {\n      CurrentMonth = 11;\n    } else {\n      CurrentMonth--;\n    }\n    CalenderDateTime.textContent = `${CovertIntoMonthString(\n      CurrentMonth\n    )} , ${CurrentYear}`;\n    DisplayDays();\n  };\n\n  const NavigateFront = (e) => {\n    if (CurrentMonth == 11) {\n      CurrentMonth = 0;\n    } else {\n      CurrentMonth++;\n    }\n    CalenderDateTime.textContent = `${CovertIntoMonthString(\n      CurrentMonth\n    )} , ${CurrentYear}`;\n    DisplayDays();\n  };\n\n  const DisplayDays = () => {\n    // Remove Event Listeners from Old Divs\n    CalenderDays.forEach((CalenderDay) => {\n      CalenderDay.removeEventListener(\"click\", ActivateThisDay);\n    });\n\n    CalenderDaysWrapper.innerHTML = \"\";\n\n    //   Calculate total Days\n    TotalDays = GetTotalDays(CurrentMonth);\n\n    //   frist date Start in which day Monday Tuesday etc\n    let FirstElementInCalender = StartDateWithRespectToDay(\n      CurrentYear,\n      CurrentMonth\n    );\n\n    //   first Loop to add . dots\n    for (let CurrentDay = 0; CurrentDay < TotalDays; CurrentDay++) {\n      if (FirstElementInCalender - 1 > CurrentDay) {\n        CalenderDaysWrapper.innerHTML += ` <div>\n                    <span>.</span>\n                  </div>`;\n      }\n    }\n\n    //   Second loop to display date\n    for (let CurrentDay = 0; CurrentDay < TotalDays; CurrentDay++) {\n      CalenderDaysWrapper.innerHTML += ` <div id=\"calender-day-${\n        CurrentDay + 1\n      }\">\n                <span>${CurrentDay + 1}</span>\n              </div>`;\n    }\n\n    if (CurrentDate.getMonth() === CurrentMonth) {\n      // let act = +cookies.get(\"theme\")\n      document\n        .querySelector(`#calender-day-${CurrentDate.getDate()}`)\n        .classList.add(\"active-day\");\n        document.querySelector(`#calender-day-${CurrentDate.getDate()}`)\n        .classList.add(cookies.get('theme'));\n    }\n    //   Add Event Listeners In New Divs\n    CalenderDays = document.querySelectorAll(\".calender-days div\");\n\n    CalenderDays.forEach((CalenderDay) => {\n      CalenderDay.addEventListener(\"click\", ActivateThisDay);\n    });\n  };\n\n  // display date\n  DisplayDate();\n  // display days\n  DisplayDays();\n\n  // add Event Listeners for back and front arrows in calender\n  CalenderNavigateButtons.BackIcon.addEventListener(\"click\", NavigateBack);\n  CalenderNavigateButtons.FrontIcon.addEventListener(\"click\", NavigateFront);\n};\n"]},"metadata":{},"sourceType":"module"}